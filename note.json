{
	"paragraphs": [{
		"text": "%md\n\n## Simple example of stream processing with random points generated as latitude and longitude\n",
		"dateUpdated": "2017-06-05T12:21:33+0200",
		"config": {
			"tableHide": false,
			"editorSetting": {
				"language": "markdown",
				"editOnDblClick": true
			},
			"colWidth": 12,
			"editorMode": "ace/mode/markdown",
			"editorHide": true,
			"results": {},
			"enabled": true
		},
		"settings": {
			"params": {},
			"forms": {}
		},
		"results": {
			"code": "SUCCESS",
			"msg": [{
				"type": "HTML",
				"data": "<div class=\"markdown-body\">\n<h2>Simple example of batch processing with random points generated as latitude and longitude</h2>\n</div>"
			}]
		},
		"apps": [],
		"jobName": "paragraph_1496658093648_-394752474",
		"id": "20170530-154344_1072392471",
		"dateCreated": "2017-06-05T12:21:33+0200",
		"status": "READY",
		"errorMessage": "",
		"progressUpdateIntervalMs": 500,
		"focus": true,
		"$$hashKey": "object:334"
	}, {
		"text": "%flink\n\n//INITIAL CHECKS\n\n//Check Scala version of Flink interpreter\nscala.util.Properties.versionString\n\n//Check flink Context\nzFlink\n\n//Check scala names resolution\ncase class Person(name: String)\nclassOf[Person].getSimpleName()\n\n//Check Angular Bind with simple property and with case class\nzFlink.angularBind(\"simpleName\", \"world\")\nzFlink.angularBind(\"caseName\", Person(\"world\"))\n\nprintln(\"%angular <h3>Hello {{simpleName}}</h3>\")\nprintln(\"%angular <h3>Hello {{caseName}}</h3>\")",
		"user": "anonymous",
		"dateUpdated": "2017-06-05T12:47:25+0200",
		"config": {
			"colWidth": 12,
			"enabled": true,
			"results": {},
			"editorSetting": {
				"language": "scala",
				"editOnDblClick": false
			},
			"editorMode": "ace/mode/scala"
		},
		"settings": {
			"params": {},
			"forms": {}
		},
		"results": {
			"code": "SUCCESS",
			"msg": [{
				"type": "TEXT",
				"data": "res54: String = version 2.11.7\nres55: org.apache.zeppelin.flink.FlinkZeppelinContext = org.apache.zeppelin.flink.FlinkZeppelinContext@bbfc82e\ndefined class Person\nres56: String = Person\n"
			}, {
				"type": "ANGULAR",
				"data": "<h3>Hello {{simpleName}}</h3>\n"
			}, {
				"type": "ANGULAR",
				"data": "<h3>Hello {{caseName}}</h3>\n"
			}]
		},
		"apps": [],
		"jobName": "paragraph_1496658692374_1838973758",
		"id": "20170605-123132_1965320289",
		"dateCreated": "2017-06-05T12:31:32+0200",
		"dateStarted": "2017-06-05T12:47:25+0200",
		"dateFinished": "2017-06-05T12:47:30+0200",
		"status": "FINISHED",
		"progressUpdateIntervalMs": 500,
		"$$hashKey": "object:335"
	}, {
		"text": "%angular\n\n<h3>Hello {{name}}</h3>\n\n",
		"user": "anonymous",
		"dateUpdated": "2017-06-05T12:46:12+0200",
		"config": {
			"colWidth": 12,
			"enabled": true,
			"results": {},
			"editorSetting": {
				"language": "text",
				"editOnDblClick": true
			},
			"editorMode": "ace/mode/undefined",
			"editorHide": false,
			"tableHide": false
		},
		"settings": {
			"params": {},
			"forms": {}
		},
		"results": {
			"code": "SUCCESS",
			"msg": [{
				"type": "ANGULAR",
				"data": "<h3>Hello {{name}}</h3>"
			}]
		},
		"apps": [],
		"jobName": "paragraph_1496659131028_970588389",
		"id": "20170605-123851_995838420",
		"dateCreated": "2017-06-05T12:38:51+0200",
		"dateStarted": "2017-06-05T12:39:59+0200",
		"dateFinished": "2017-06-05T12:39:59+0200",
		"status": "FINISHED",
		"progressUpdateIntervalMs": 500,
		"$$hashKey": "object:336"
	}, {
		"text": "%flink\n\nimport scala.util.Random\n\ncase class Loc(lat: Double, lon: Double)\nval random = new Random()\nval randomLocations = List.tabulate(100)(n => Loc( (Random.nextDouble() * -180.0) + 90.0, (Random.nextDouble() * -360.0) + 180.0))\n\nval points = benv.fromCollection(randomLocations)\n\npoints.collect().map { x => \n    Thread.sleep(500)\n    zFlink.angularBind(\"locations\", x)\n    x\n}\n",
		"user": "anonymous",
		"dateUpdated": "2017-06-05T12:41:59+0200",
		"config": {
			"colWidth": 12,
			"enabled": true,
			"results": {},
			"editorSetting": {
				"language": "scala",
				"editOnDblClick": false
			},
			"editorMode": "ace/mode/scala"
		},
		"settings": {
			"params": {},
			"forms": {}
		},
		"results": {
			"code": "SUCCESS",
			"msg": [{
				"type": "TEXT",
				"data": "import scala.util.Random\ndefined class Loc\nrandom: scala.util.Random = scala.util.Random@450a48f8\nrandomLocations: List[Loc] = List(Loc(17.837089607373287,-10.1180186507398), Loc(-28.578944088582617,24.395390746898983), Loc(78.78563567366696,164.03359606016838), Loc(-32.05264439940275,125.54117256536566), Loc(78.8954364162988,162.00584378149634), Loc(-50.02343581440732,-25.38376389282442), Loc(51.97476532362376,-169.86037988883993), Loc(64.78248063351081,101.15645197598602), Loc(88.05972005391494,33.60951074998914), Loc(9.28983645195423,-150.0934664993681), Loc(67.41020403890788,-142.66475186618976), Loc(-64.09339007621372,-130.5358294202818), Loc(10.033238886087233,7.940434513988407), Loc(-86.28627968913315,15.962398445559472), Loc(-16.31031485191393,131.87922647833742), Loc(63.54428505271298,-112.09285585386152), Loc(-13.788735085142818,-32.21841100200584), Loc(-50.706935775308665...points: org.apache.flink.api.scala.DataSet[Loc] = org.apache.flink.api.scala.DataSet@51dac026\nres43: Seq[Loc] = ArrayBuffer(Loc(17.837089607373287,-10.1180186507398), Loc(-28.578944088582617,24.395390746898983), Loc(78.78563567366696,164.03359606016838), Loc(-32.05264439940275,125.54117256536566), Loc(78.8954364162988,162.00584378149634), Loc(-50.02343581440732,-25.38376389282442), Loc(51.97476532362376,-169.86037988883993), Loc(64.78248063351081,101.15645197598602), Loc(88.05972005391494,33.60951074998914), Loc(9.28983645195423,-150.0934664993681), Loc(67.41020403890788,-142.66475186618976), Loc(-64.09339007621372,-130.5358294202818), Loc(10.033238886087233,7.940434513988407), Loc(-86.28627968913315,15.962398445559472), Loc(-16.31031485191393,131.87922647833742), Loc(63.54428505271298,-112.09285585386152), Loc(-13.788735085142818,-32.21841100200584), Loc(-50.706935775308665,108..."
			}]
		},
		"apps": [],
		"jobName": "paragraph_1496659286957_-1893868817",
		"id": "20170605-124126_329384792",
		"dateCreated": "2017-06-05T12:41:26+0200",
		"dateStarted": "2017-06-05T12:41:59+0200",
		"dateFinished": "2017-06-05T12:43:07+0200",
		"status": "FINISHED",
		"progressUpdateIntervalMs": 500,
		"$$hashKey": "object:337"
	}, {
		"text": "%md\n\n## Simple example of stream processing with random points generated as latitude and longitude\n",
		"dateUpdated": "2017-06-05T12:21:33+0200",
		"config": {
			"tableHide": false,
			"editorSetting": {
				"language": "markdown",
				"editOnDblClick": true
			},
			"colWidth": 12,
			"editorMode": "ace/mode/markdown",
			"editorHide": true,
			"results": {},
			"enabled": true
		},
		"settings": {
			"params": {},
			"forms": {}
		},
		"results": {
			"code": "SUCCESS",
			"msg": [{
				"type": "HTML",
				"data": "<div class=\"markdown-body\">\n<h2>Simple example of stream processing with random points generated as latitude and longitude</h2>\n</div>"
			}]
		},
		"apps": [],
		"jobName": "paragraph_1496658093656_-397830465",
		"id": "20170530-154346_561698221",
		"dateCreated": "2017-06-05T12:21:33+0200",
		"status": "READY",
		"errorMessage": "",
		"progressUpdateIntervalMs": 500,
		"$$hashKey": "object:338"
	}, {
		"text": "%flink\n\nimport org.apache.flink.streaming.api.functions.sink.SinkFunction\nimport org.apache.flink.streaming.api.functions.source.SourceFunction.SourceContext\nimport _root_.scala.util.Random\nimport _root_.scala.collection.JavaConversions._\nimport org.apache.flink.contrib.streaming.DataStreamUtils\n\ncase class Loc(lat: Double, lon: Double)\nval random = new Random()\n\nval randomStringStream = senv.addSource { (ctx: SourceContext[Loc]) =>\n  while (true) {\n    Thread.sleep(500)\n    ctx.collect(Loc( (Random.nextDouble() * -180.0) + 90.0, (Random.nextDouble() * -360.0) + 180.0))\n  }\n}\n\nval iterator = DataStreamUtils.collect(randomStringStream.javaStream)\niterator.foreach(x => zFlink.angularBind(\"locations\", x))",
		"user": "anonymous",
		"dateUpdated": "2017-06-05T13:10:37+0200",
		"config": {
			"colWidth": 12,
			"enabled": true,
			"results": {},
			"editorSetting": {
				"language": "scala",
				"editOnDblClick": false
			},
			"editorMode": "ace/mode/scala"
		},
		"settings": {
			"params": {},
			"forms": {}
		},
		"apps": [],
		"jobName": "paragraph_1496660869925_-1585032587",
		"id": "20170605-130749_870845179",
		"dateCreated": "2017-06-05T13:07:49+0200",
		"dateStarted": "2017-06-05T13:10:37+0200",
		"dateFinished": "2017-06-05T13:12:22+0200",
		"status": "ERROR",
		"errorMessage": "",
		"progressUpdateIntervalMs": 500,
		"$$hashKey": "object:339"
	}, {
		"text": "%md\n\n## View locations on the map\n",
		"dateUpdated": "2017-06-05T12:21:33+0200",
		"config": {
			"tableHide": false,
			"editorSetting": {
				"language": "markdown",
				"editOnDblClick": true
			},
			"colWidth": 12,
			"editorMode": "ace/mode/markdown",
			"editorHide": true,
			"results": {},
			"enabled": true
		},
		"settings": {
			"params": {},
			"forms": {}
		},
		"results": {
			"code": "SUCCESS",
			"msg": [{
				"type": "HTML",
				"data": "<div class=\"markdown-body\">\n<h2>View locations on the map</h2>\n</div>"
			}]
		},
		"apps": [],
		"jobName": "paragraph_1496658093657_-398215214",
		"id": "20170530-155046_1847449451",
		"dateCreated": "2017-06-05T12:21:33+0200",
		"status": "READY",
		"errorMessage": "",
		"progressUpdateIntervalMs": 500,
		"$$hashKey": "object:340"
	}, {
		"text": "%angular\n\n<!-- place this in an %angular paragraph -->\n\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.5/leaflet.css\" />\n\n<div id=\"map\" style=\"height: 800px; width: 100%\"></div>\n\n<script type=\"text/javascript\">\nfunction initMap() {\n    var map = L.map('map').setView([30.00, -30.00], 3);\n    L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: 'Map data &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors',\n        maxZoom: 12,\n        minZoom: 3\n    }).addTo(map);\n\n    var geoMarkers = L.layerGroup().addTo(map);\n\n    var el = angular.element($('#map').parent('.ng-scope'));\n    angular.element(el).ready(function() {\n        window.locationWatcher = el.scope().compiledScope.$watch('locations', function(newValue, oldValue) {\n            console.log(\"new\", newValue)\n            console.log(\"old\", oldValue)\n            var markers = [newValue]\n            angular.forEach(markers, function(point) {\n                var lat = point.lat;\n                var lon = point.lon;\n                var marker = L.marker([lat, lon]).addTo(geoMarkers);\n            });\n        })\n    });\n}\n\nif (window.locationWatcher) {\n    // clear existing watcher otherwise we'll have duplicates\n    window.locationWatcher();\n}\n\n// ensure we only load the script once, seems to cause issues otherwise\nif (window.L) {\n    initMap();\n} else {\n    console.log('Loading Leaflet library');\n    var sc = document.createElement('script');\n    sc.type = 'text/javascript';\n    sc.src = 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.5/leaflet.js';\n    sc.onload = initMap;\n    sc.onerror = function(err) { alert(err); }\n    document.getElementsByTagName('head')[0].appendChild(sc);\n}\n</script>",
		"user": "anonymous",
		"dateUpdated": "2017-06-05T13:07:36+0200",
		"config": {
			"tableHide": false,
			"editorSetting": {
				"language": "scala",
				"editOnDblClick": true
			},
			"colWidth": 12,
			"editorMode": "ace/mode/undefined",
			"editorHide": true,
			"results": {},
			"enabled": true
		},
		"settings": {
			"params": {},
			"forms": {}
		},
		"results": {
			"code": "SUCCESS",
			"msg": [{
				"type": "ANGULAR",
				"data": "<!-- place this in an %angular paragraph -->\n\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.5/leaflet.css\" />\n\n<div id=\"map\" style=\"height: 800px; width: 100%\"></div>\n\n<script type=\"text/javascript\">\nfunction initMap() {\n    var map = L.map('map').setView([30.00, -30.00], 3);\n    L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: 'Map data &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors',\n        maxZoom: 12,\n        minZoom: 3\n    }).addTo(map);\n\n    var geoMarkers = L.layerGroup().addTo(map);\n\n    var el = angular.element($('#map').parent('.ng-scope'));\n    angular.element(el).ready(function() {\n        window.locationWatcher = el.scope().compiledScope.$watch('locations', function(newValue, oldValue) {\n            console.log(\"new\", newValue)\n            console.log(\"old\", oldValue)\n            var markers = [newValue]\n            angular.forEach(markers, function(point) {\n                var lat = point.lat;\n                var lon = point.lon;\n                var marker = L.marker([lat, lon]).addTo(geoMarkers);\n            });\n        })\n    });\n}\n\nif (window.locationWatcher) {\n    // clear existing watcher otherwise we'll have duplicates\n    window.locationWatcher();\n}\n\n// ensure we only load the script once, seems to cause issues otherwise\nif (window.L) {\n    initMap();\n} else {\n    console.log('Loading Leaflet library');\n    var sc = document.createElement('script');\n    sc.type = 'text/javascript';\n    sc.src = 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.5/leaflet.js';\n    sc.onload = initMap;\n    sc.onerror = function(err) { alert(err); }\n    document.getElementsByTagName('head')[0].appendChild(sc);\n}\n</script>"
			}]
		},
		"apps": [],
		"jobName": "paragraph_1496658093658_-397060967",
		"id": "20170530-154400_814119751",
		"dateCreated": "2017-06-05T12:21:33+0200",
		"dateStarted": "2017-06-05T13:07:36+0200",
		"dateFinished": "2017-06-05T13:07:36+0200",
		"status": "FINISHED",
		"progressUpdateIntervalMs": 500,
		"$$hashKey": "object:341"
	}, {
		"text": "",
		"dateUpdated": "2017-06-05T12:21:33+0200",
		"config": {
			"colWidth": 12,
			"editorMode": "ace/mode/scala",
			"results": {},
			"enabled": true,
			"editorSetting": {
				"language": "scala",
				"editOnDblClick": false
			}
		},
		"settings": {
			"params": {},
			"forms": {}
		},
		"apps": [],
		"jobName": "paragraph_1496658093659_-397445716",
		"id": "20170530-154420_778113827",
		"dateCreated": "2017-06-05T12:21:33+0200",
		"status": "READY",
		"errorMessage": "",
		"progressUpdateIntervalMs": 500,
		"$$hashKey": "object:342"
	}],
	"name": "Flink 1.3.0/flinkContext",
	"id": "2BTRWA9EV",
	"angularObjects": {
		"2CHQYE3P5:shared_process": [],
		"2CKAR1J7H:shared_process": [],
		"2CHQ2H7GQ:shared_process": [],
		"2CMRHFQQ1:shared_process": [],
		"2CHH4N4Z8:shared_process": [],
		"2CKHVA5C2:shared_process": [],
		"2CJ64SBUQ:shared_process": [],
		"2CJSV7TM4:shared_process": [],
		"2CKBDTWKT:shared_process": [],
		"2CMDDV3BK:shared_process": [],
		"2CJWFCGW2:shared_process": [],
		"2CMQUH6UX:shared_process": [],
		"2CHCVW67D:shared_process": [],
		"2CJJJRKVC:shared_process": [],
		"2CJFZ77UY:shared_process": [],
		"2CMQNX7PM:shared_process": [],
		"2CJWCHFK5:shared_process": [],
		"2CGWWJWJK:shared_process": [],
		"2CMCVS66J:shared_process": []
	},
	"config": {
		"looknfeel": "default",
		"personalizedMode": "false"
	},
	"info": {}
}